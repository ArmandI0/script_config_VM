#!/bin/bash

# Vérifie si l'utilisateur est root
if [ "$EUID" -eq 0 ]; then
  echo "Veuillez exécuter ce script en tant qu'utilisateur normal, pas root."
  exit 1
fi

# Fonction pour exécuter des commandes avec sudo si nécessaire
run_as_root() {
  sudo "$@"
}

# Mise à jour de la liste des paquets
echo "Mise à jour de la liste des paquets..."
run_as_root apt-get update > /dev/null && run_as_root apt-get upgrade -y > /dev/null

# Installation des outils requis
echo "Installation des outils requis..."
run_as_root apt-get install -y software-properties-common apt-transport-https wget curl zsh dbus-x11 git > /dev/null

# Installation de Discord
echo "Installation de Discord..."
wget -O /tmp/discord.deb "https://discord.com/api/download?platform=linux&format=deb" &> /dev/null
run_as_root apt-get install -y /tmp/discord.deb &> /dev/null
rm /tmp/discord.deb

# Application du thème sombre GNOME
echo "Application du thème sombre GNOME..."
gsettings set org.gnome.desktop.interface gtk-theme 'Yaru-dark' > /dev/null
gsettings set org.gnome.desktop.interface icon-theme 'Yaru-dark' > /dev/null

# Installation de Oh My Zsh
echo "Installation de Oh My Zsh..."
if [ -d "$HOME/.oh-my-zsh" ]; then
  echo "Oh My Zsh est déjà installé."
else
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi
# Définir Zsh comme le shell par défaut
if [ "$SHELL" == "/usr/bin/zsh" ]; then
  echo "Zsh est déjà défini comme shell par défaut."
else
  chsh -s "$(which zsh)" > /dev/null
  echo "Oh My Zsh installé et Zsh défini comme shell par défaut."
fi

# Installation de Visual Studio Code
echo "Installation de Visual Studio Code..."
current_dir=$(pwd)
wget --user-agent=Mozilla --content-disposition -E -c "https://code.visualstudio.com/sha/download?build=stable&os=linux-x64" &> /dev/null
chmod 777 code-stable-x64-*.tar.gz > /dev/null
tar -xzf code-stable-x64-*.tar.gz &> /dev/null
rm code-stable-x64-*.tar.gz > /dev/null
echo "alias code=\"${current_dir}/VSCode-linux-x64/bin/code --no-sandbox\"" >> ~/.zshrc

# Génération d'une nouvelle clé SSH
echo "Génération d'une nouvelle clé SSH..."
read -p "Entrez votre adresse e-mail utilise sur Github : " EMAIL
if [ -z "$EMAIL" ]; then
  echo "Vous devez fournir une adresse e-mail pour générer une clé SSH."
  exit 1
fi
ssh-keygen -t ed25519 -C $EMAIL -f ~/.ssh/id_ed25519 -N ""

# Afficher la clé publique
echo "Voici votre clé SSH publique:"
cat ~/.ssh/id_ed25519.pub

# Ajouter la clé SSH à GitHub
read -p "Souhaitez-vous ajouter la clé SSH à votre compte GitHub automatiquement? (o/n): " add_to_github

if [[ "$add_to_github" == "o" || "$add_to_github" == "O" ]]; then
  read -p "Entrez votre nom d'utilisateur GitHub: " github_username
  read -p "Entrez votre token GitHub: " github_token

  if [ -z "$github_token" ] || [ -z "$github_username" ]; then
    echo "Vous devez fournir un token GitHub pour continuer."
    exit 1
  fi
  ssh_key=$(cat ~/.ssh/id_ed25519.pub)
  curl -u "$github_username:$github_token" \
       --data "{\"title\":\"$(hostname) $(date)\",\"key\":\"$ssh_key\"}" \
       https://api.github.com/user/keys

  echo "Clé SSH ajoutée à votre compte GitHub."
fi

read -p "Souhaitez vous ajouter la clé SSH à votre Intra ? (o/n):" add_to_intra
if [[ "$add_to_intra" == "o" || "$add_to_intra" == "O" ]]; then
    if [ -x "$(command -v firefox)" ]; then
        firefox https://profile.intra.42.fr/gitlab_users &
    fi
fi

read -p "Souhaitez vous installez docker ? (o/n)" install_docker
if [[ "$install_docker" == "o" || "$install_docker" == "O" ]]; then
    echo "Installation de Docker..."
    wget -O install_docker https://raw.githubusercontent.com/Haletran/script_config_VM/main/install_docker > /dev/null
    chmod +x install_docker
    run_as_root bash install_docker
fi

echo "Installation terminée avec succès!"
